The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for module docstring:
	>>> m = __import__("0-add_integer").__doc__
	>>> len(m) > 1
	True

Checking regular addition:
	>>> add_integer(2, 5)
	7

Checking positive with negative:
	>>> add_integer(3, -4)
	-1

Checking float with int:
	>>> add_integer(2.1, 4)
	6

Checking both float:
	>>> add_integer(3.45, 3.1)
	6

Checking non-number with number:
	>>> add_integer("1", 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking number with non-number:
	>>> add_integer(1,"2")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking bool with number:
	>>> add_integer(True, 1)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking number with bool:
	>>> add_integer(2, False)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking no args:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

Checking one arg:
	>>> add_integer(1)
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'b'

Checking more than 2 args:
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes 2 positional arguments but 3 were given
