====================================
Test for the 100-matrix_mul module
====================================

This test is for computation of matrices(multiplication).
The multiplication of the matrices must be possible if not an
error is raised.

Importing the 100-matrices_mul module
=====================================
        >>> matrix_mul = __import__("100-matrix_mul").matrix_mul

checking for module docstring
::
        >>> Mdocs = __import__("100-matrix_mul").__doc__
        >>> len(Mdocs) > 5
        True

checking function docstring for module
::
        >>> Fdocs = matrix_mul.__doc__
        >>> len(Fdocs) > 5
        True

Tests when wrong Type is passed
::
        >>> matrix_mul([[2, 3, 4], [4, 2, 3]], None)
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list

Tests when wrong values are passed as arguement
::
	>>> matrix_mul([[]], [[2, 4]])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty
	>>> matrix_mul([[1, 4.2], [1, 4.0]], [])
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty
	>>> matrix_mul([[1, 4.2, 3], [1, 4.0, 4]], [[1, 4], [3, 5]])
	Traceback (most recent call last):
	...
	ValueError: m_a and m_b can't be multiplied

	
Checking for one too few args:
	>>> matrix_mul([[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Checking for too many args:
	 >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() takes 2 positional arguments but 3 were given
